// Platform             : GitHub
// Course Name          : sass-tutorials
// Company              : Go Digit General Insurance Limited
// Author               : Deepjyoti Barman
// Designation          : QA Analyst
// Date                 : August 23 (Saturday), 2020


@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@200;300;400;600&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Lato:wght@100;300;400;700&display=swap');

$color-primary: #f1e66b;
$color-secondary: #f08a5d;
$color-tertiary: #b83b5e;
$color-text-dark: #059185;
$color-text-light: #ddd;

$button-width: 150px;

// Mixin: A mixin is a reusable piece of code that we can write to use in multiple different places. Thus instead of repeating the code we have it in one place and this is called Dry principle (Don't Repeat Yourself)
@mixin clearfix {
    // The following code fixes the view when all the child elements of a parent element have float attribute
    &::after {
        content: "";
        clear: both;
        display: table;
    }
}

@mixin style-link-text($color) {
    color: $color;
    text-decoration: none;
    text-transform: uppercase;
}

@function division($a, $b) {
    @return $a / $b;
}

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: 'Source Sans Pro', 'Lato', sans-serif;
    font-weight: 400;
    font-size: 16px;
    line-height: 1.7;
}

nav {
    @include clearfix();

    background-color: $color-primary;
    margin: division(60, 2) * 1px;
}

.navigation {
    float: left;
    list-style: none;

    // Equivalent CSS: .navigation li { ... }
    li {
        display: inline-block;
        margin-left: 30px;

        // Equivalent CSS: .navigation li:first-child { ... }
        &:first-child {
            margin: 0;
        }

        // Equivalent CSS: .navigation li a:link { ... }
        a:link {
            @include style-link-text($color-text-dark);
        }
    }
}

.buttons {
    float: right;
}

// With extends, the placeholder %btn-placeholder will be replaced by .selectors btn-main:link and .btn-hot:link
// Equivalent CSS: .btn-main:link, .btn-hot:link { ... }
%btn-placeholder {
    @include style-link-text($color-text-light);

    border-radius: 100px;
    display: inline-block;
    padding: 10px;
    text-align: center;
    width: $button-width;
}

.btn-main {
    &:link {
        @extend %btn-placeholder;

        background-color: $color-secondary;
    }

    &:hover {
        background-color: darken($color: $color-secondary, $amount: 15%);
    }
}

.btn-hot {
    &:link {
        background-color: $color-tertiary;
        @extend %btn-placeholder;
    }

    &:hover {
        background-color: lighten($color: $color-tertiary, $amount: 15%);
    }
}